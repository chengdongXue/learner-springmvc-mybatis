<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xsi:schemaLocation="http://www.springframework.org/schema/beans    
                     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                  http://www.springframework.org/schema/context    
                 http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                    http://www.springframework.org/schema/mvc    
                       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
                       
 <!-- 引入配置文件 -->
 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name="location" value="classpath:jdbcConfig.properties" />
 </bean>

 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <property name="driverClassName" value="${driver}" />
  <property name="url" value="${url}" />
  <property name="username" value="${username}" />
  <property name="password" value="${password}" />
  <!-- 初始化连接大小 -->
  <property name="initialSize" value="${initialSize}"></property>
  <!-- 连接池最大数量 -->
  <property name="maxActive" value="${maxActive}"></property>
  <!-- 连接池最大空闲 -->
  <property name="maxIdle" value="${maxIdle}"></property>
  <!-- 连接池最小空闲 -->
  <property name="minIdle" value="${minIdle}"></property>
  <!-- 获取连接最大等待时间 -->
  <property name="maxWait" value="${maxWait}"></property>
 </bean>

 <context:component-scan base-package="quick.start.study.spring" use-default-filters="false" >
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
      <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>
  
 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  <property name="dataSource" ref="dataSource" />
  <property name="configLocation" value="/WEB-INF/spring/mybatis.xml" />
  <!-- 自动扫描mapping.xml文件 -->
  <property name="mapperLocations" value="classpath:quick/start/study/spring/business/mapping/*.xml"></property>
 </bean>

 <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  <property name="basePackage" value="quick.start.study.spring" />
  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
  <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
 </bean>
    
 <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
 <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="dataSource" />
 </bean>
 
  <bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">  
    <property name="dataSource" ref="dataSource"></property>  
</bean>  
  
<bean id="dao" class="quick.start.study.spring.business.dao.EmployeeDao">  
    <property name="template" ref="jt"></property>
</bean>

</beans>  