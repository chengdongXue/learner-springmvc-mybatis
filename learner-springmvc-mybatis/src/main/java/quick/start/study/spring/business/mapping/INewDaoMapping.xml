<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="quick.start.study.spring.business.dao.INewDao">

    <insert id="addNew" parameterType="quick.start.study.spring.business.entity.New">
        insert into new (newId,newTitle,newDetails,pushTime,pushPerson,delFlag,flowUpTop,thumbnails,typeId)
        values(#{newId},#{newTitle},#{newDetails},#{pushTime},#{pushPerson},#{delFlag},#{flowUpTop},#{thumbnails},#{typeId})
    </insert>
    
    <select id="getAllNewLetterList" resultType="quick.start.study.spring.business.entity.New">
        select n.newId as newId,
      n.newTitle as newTitle,
      n.pushTime as pushTime,
      u.userName as pushPerson,
      n.thumbnails as thumbnails,
      t.typeName as typeName,
      n.flowUpTop as flowUpTop from new as n
      inner join `user` as u
      inner join type as t
      on u.userId = n.pushPerson and t.typeId = n.typeId
      where n.delFlag = 0 and u.delFlag = 0 and t.delFlag = 0
    </select>
    
    <delete id="byIdDeleteNew" parameterType="map">
      delete from new
      <where>
          newId = #{newId, jdbcType=VARCHAR}
      </where>
    </delete>
    
    <select id="byIdQueryNew" resultType="quick.start.study.spring.business.entity.New">
      select * from new where delFlag = 0 and newId = #{newId, jdbcType=VARCHAR}
    </select>

  <update id="editNew" parameterType="map">
      update new
      <set>
        newTitle = #{newTitle, jdbcType=VARCHAR},
        newDetails = #{newDetails, jdbcType=VARCHAR},
        pushTime = #{pushTime, jdbcType=VARCHAR},
        thumbnails = #{thumbnails, jdbcType=VARCHAR},
        typeId = #{typeId, jdbcType=VARCHAR},
        flowUpTop = #{flowUpTop, jdbcType=DECIMAL}
      </set>
      <where>
        newId = #{newId, jdbcType=VARCHAR}
      </where>
  </update>
  
</mapper>